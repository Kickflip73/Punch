spring:
  datasource:
    username: root
    password: '20020329@mysql'
    url: jdbc:mysql://101.33.242.250/punch?serverTimezone=Asia/Shanghai&useSSL=false&allowPublicKeyRetrieval=true
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource

    # 根据sql创建数据库结构
    #initialization-mode: always
    #schema: classpath:punch_2021.10.15.sql


    #   数据源其他配置
    ### 初始化，最小，最大
    initialSize: 10
    minIdle: 8
    maxActive: 20
    # 获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁
    maxWait: 60000
    #有两个含义：#1) Destroy线程会检测连接的间隔时间2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
    timeBetweenEvictionRunsMillis: 60000
    ### 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    #用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
    validationQuery: SELECT 1 FROM DUAL
    #建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
    testWhileIdle: true
    #申请连接时执行validationQuery检测连接是否有效，做了(true)这个配置会降低性能。
    testOnBorrow: false
    #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    testOnReturn: false
    #是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
    poolPreparedStatements: true

    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    maxPoolPreparedStatementPerConnectionSize: 20
    useGlobalDataSourceStat: true
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
  servlet:
    multipart:
      enabled: true
      max-request-size: 10MB
      max-file-size: 10MB
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8

#redis
redis:
  #  host: 106.15.248.34
  #  host: 47.100.40.27
  host: 101.33.242.250
  port: 6379
  password: 20020329@redis
  timeout: 10
  poolMaxTotal: 1000
  poolMaxIdle: 500
  poolMaxWait: 500
server:
  port: 8090
logging:
  level:
    root: info
    com.yrmjhtdjxh.punch: debug
  file: log/punch-start.log


mybatis:
  mapper-locations: classpath:mapper/*.xml

img:
#    location: /usr/local/image/
#    url: https://www.seeyj.top
#  location: G://images/
  location: image/punch/
#  url: http://localhost:8090
  url: https://shanghai-bucket-image.oss-cn-shanghai.aliyuncs.com/

# swagger3自动扫描
springfox:
  documentation:
    swagger-ui:
      enabled: true
